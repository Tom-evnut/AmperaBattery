
C:\Users\tomde\AppData\Local\Temp\arduino\sketches\F18E17D99E802212301FDB80DE85E1DB/VoltBMSV2.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
000145e8 l    d  .fini	00000000 .fini
1fff8000 l    d  .usbdescriptortable	00000000 .usbdescriptortable
1fff8200 l    d  .dmabuffers	00000000 .dmabuffers
1fff83bc l    d  .usbbuffers	00000000 .usbbuffers
1fff8720 l    d  .data	00000000 .data
1fff8f78 l    d  .bss	00000000 .bss
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 mk20dx128.c
00008d24 l     F .text	0000000c startup_default_early_hook
00008d30 l     F .text	00000002 startup_default_late_hook
00000000 l    df *ABS*	00000000 crtstuff.c
00000410 l     F .text	00000000 register_tm_clones
00000434 l     F .text	00000000 frame_dummy
1fff8f78 l     O .bss	00000000 object.0
000145d8 l     O .text	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 BMSModule.cpp
00000000 l    df *ABS*	00000000 BMSModuleManager.cpp
00000000 l    df *ABS*	00000000 Logger.cpp
00000000 l    df *ABS*	00000000 SerialConsole.cpp
00000000 l    df *ABS*	00000000 VoltBMSV2.ino.cpp
00001c78 l     F .text	00000054 long map<unsigned short, int, int, int, int>(unsigned short, int, int, int, int, std::enable_if<std::is_integral<unsigned short>::value, void>::type*) [clone .isra.0]
000040c8 l     F .text	00000048 _GLOBAL__sub_I_can
00004346 l       .text	00000000 L_13442_delayMicroseconds
00000000 l    df *ABS*	00000000 FlexCAN.cpp
000075dc l     F .text	0000000c _GLOBAL__sub_I_Can0
00000000 l    df *ABS*	00000000 ADC.cpp
00000000 l    df *ABS*	00000000 ADC_Module.cpp
00000000 l    df *ABS*	00000000 SPI.cpp
00007e18 l     F .text	00000038 _GLOBAL__sub_I__Z15_spi_dma_rxISR0v
00000000 l    df *ABS*	00000000 FilterOnePole.cpp
00000000 l    df *ABS*	00000000 Serial_CAN_Module_TeensyS3.cpp
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 HardwareSerial2.cpp
00000000 l    df *ABS*	00000000 HardwareSerial3.cpp
00000000 l    df *ABS*	00000000 Print.cpp
00008524 l     F .text	00000082 Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 Stream.cpp
00000000 l    df *ABS*	00000000 analog.c
1fffb4d4 l     O .bss	00000001 analog_reference_internal
1fffb4d5 l     O .bss	00000001 calibrating
1fff87d4 l     O .data	00000001 analog_config_bits
1fff87d5 l     O .data	00000001 analog_num_average
00000000 l    df *ABS*	00000000 eeprom.c
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 pins_teensy.c
00008e30 l     F .text	00000044 digitalWrite.part.0
00008e88 l     F .text	00000002 startup_default_middle_hook
1fff87dc l     O .data	00000001 analog_write_res
00000000 l    df *ABS*	00000000 serial2.c
1fffb4dc l     O .bss	00000004 rts_pin
1fffb4e0 l     O .bss	00000040 rx_buffer
1fffb520 l     O .bss	00000001 rx_buffer_head
1fffb524 l     O .bss	00000004 rx_buffer_storage_
1fffb528 l     O .bss	00000001 rx_buffer_tail
1fffb52c l     O .bss	00000004 transmit_pin
1fffb530 l     O .bss	00000001 transmitting
1fffb534 l     O .bss	00000028 tx_buffer
1fffb55c l     O .bss	00000001 tx_buffer_head
1fffb560 l     O .bss	00000004 tx_buffer_storage_
1fffb564 l     O .bss	00000001 tx_buffer_tail
1fff87e0 l     O .data	00000004 rts_high_watermark_
1fff87e4 l     O .data	00000004 rts_low_watermark_
1fff87e8 l     O .data	00000004 rx_buffer_total_size_
1fff87ec l     O .data	00000001 rx_pin_num
1fff87f0 l     O .data	00000004 tx_buffer_total_size_
1fff87f4 l     O .data	00000001 tx_pin_num
00000000 l    df *ABS*	00000000 serial3.c
00009d30 l     F .text	000000ec serial3_putchar.part.0
1fffb568 l     O .bss	00000004 rts_pin
1fffb56c l     O .bss	00000040 rx_buffer
1fffb5ac l     O .bss	00000001 rx_buffer_head
1fffb5b0 l     O .bss	00000004 rx_buffer_storage_
1fffb5b4 l     O .bss	00000001 rx_buffer_tail
1fffb5b8 l     O .bss	00000004 transmit_pin
1fffb5bc l     O .bss	00000001 transmitting
1fffb5c0 l     O .bss	00000028 tx_buffer
1fffb5e8 l     O .bss	00000001 tx_buffer_head
1fffb5ec l     O .bss	00000004 tx_buffer_storage_
1fffb5f0 l     O .bss	00000001 tx_buffer_tail
1fff87f8 l     O .data	00000004 rts_high_watermark_
1fff87fc l     O .data	00000004 rts_low_watermark_
1fff8800 l     O .data	00000004 rx_buffer_total_size_
1fff8804 l     O .data	00000004 tx_buffer_total_size_
1fff8808 l     O .data	00000001 tx_pin_num
00000000 l    df *ABS*	00000000 serialEvent2.cpp
00000000 l    df *ABS*	00000000 serialEvent3.cpp
00000000 l    df *ABS*	00000000 usb_dev.c
1fffb5f4 l     O .bss	00000040 ep0_rx0_buf
1fffb634 l     O .bss	00000040 ep0_rx1_buf
1fffb674 l     O .bss	00000001 ep0_tx_bdt_bank
1fffb675 l     O .bss	00000001 ep0_tx_data_toggle
1fffb676 l     O .bss	00000002 ep0_tx_len
1fffb678 l     O .bss	00000004 ep0_tx_ptr
1fffb67c l     O .bss	00000008 reply_buffer
1fffb684 l     O .bss	00000010 rx_first
1fffb694 l     O .bss	00000010 rx_last
1fffb6a4 l     O .bss	00000008 setup
1fffb6ac l     O .bss	00000010 tx_first
1fffb6bc l     O .bss	00000010 tx_last
1fffb6cc l     O .bss	00000004 tx_state
1fff8000 l     O .usbdescriptortable	000000a0 table
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_mem.c
1fff881c l     O .data	00000004 usb_buffer_available
00000000 l    df *ABS*	00000000 usb_serial.c
1fffb6e0 l     O .bss	00000004 rx_packet
1fffb6e4 l     O .bss	00000001 transmit_previous_timeout
1fffb6e5 l     O .bss	00000001 tx_noautoflush
1fffb6e8 l     O .bss	00000004 tx_packet
00000000 l    df *ABS*	00000000 yield.cpp
1fffb6fd l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 serialEvent.cpp
00000000 l    df *ABS*	00000000 usb_desc.c
1fff8824 l     O .data	00000043 config_descriptor
1fff8868 l     O .data	00000012 device_descriptor
00000000 l    df *ABS*	00000000 libm_a-wf_exp.o
00000000 l    df *ABS*	00000000 libm_a-sf_finite.o
00000000 l    df *ABS*	00000000 libm_a-ef_exp.o
00000000 l    df *ABS*	00000000 libm_a-math_errf.o
0000b570 l     F .text	00000012 with_errnof
0000b584 l     F .text	00000026 xflowf
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixunsdfsi.o
00000000 l    df *ABS*	00000000 _arm_addsubsf3.o
00000000 l    df *ABS*	00000000 _arm_muldivsf3.o
00000000 l    df *ABS*	00000000 _arm_cmpsf2.o
00000000 l    df *ABS*	00000000 _arm_fixsfsi.o
00000000 l    df *ABS*	00000000 _arm_fixunssfsi.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
0000ca44 l     F .text	00000018 stdio_exit_handler
0000ca5c l     F .text	00000040 cleanup_stdio
0000ca9c l     F .text	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-sprintf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
0000d11c l     F .text	00000014 register_fini
00000000 l    df *ABS*	00000000 libc_a-atexit.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-svfprintf.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-fini.o
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libm_a-s_frexp.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
0000fbf0 l     F .text	00000128 quorem
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiprintf.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
00010d60 l     F .text	00000076 __sprint_r.part.0
00011d5c l     F .text	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
000076f0 g     F .text	00000004 ADC_Module::getMaxValue()
1fff8fa8 g     O .bss	00000004 Charged
00003958 g     F .text	000000ac outputdebug()
00008d1c  w    F .text	00000006 adc0_isr
00001ccc g     F .text	00000180 loadSettings()
0000ba44 g     F .text	0000002c .hidden __aeabi_dcmpun
0000aea8 g     F .text	0000002c usb_serial_available
000045c8 g     F .text	00001b94 menu()
00012574 g     F .text	00000024 _isatty_r
0000ba08 g     F .text	00000012 .hidden __aeabi_dcmple
0000189c g     F .text	00000390 Logger::logMessage(char*, std::__va_list, bool)
0000b944 g     F .text	0000007a .hidden __cmpdf2
00008dd0 g     F .text	00000004 operator new[](unsigned int)
0000cf08 g     F .text	0000002c _lseek_r
0000b118  w    F .text	000000f0 yield
000083ec  w    F .text	0000000c HardwareSerial3::write(unsigned char)
0000b944 g     F .text	0000007a .hidden __eqdf2
1fff8880 g     O .data	00000018 usb_string_manufacturer_name_default
0000b8d8 g     F .text	0000005a .hidden __floatdidf
00008cd8  w    F .text	00000044 hard_fault_isr
000083b4 g     F .text	0000002c HardwareSerial3::begin(unsigned long)
00008d1c  w    F .text	00000006 dma_ch6_isr
00000588 g     F .text	00000006 BMSModule::getCUVCells()
1fffb884 g     O .bss	00000001 __lock___atexit_recursive_mutex
00007ccc  w    F .text	0000013c SPIClass::dma_rxisr()
00010bd0 g     F .text	0000004c _wcrtomb_r
00003094 g     F .text	00000180 calcur()
0000a0d4 g     F .text	00000014 serial3_putchar
000085b8 g     F .text	0000001c Print::println()
000007dc g     F .text	00000040 BMSModuleManager::seriescells()
00009a0c g     F .text	00000028 serial2_available
0000ccb0 g     F .text	00000020 __sseek
0000cb70 g     F .text	0000003c __sinit
00008d1c  w    F .text	00000006 uart0_lon_isr
0000a474 g     F .text	00000080 usb_rx_memory
00012498 g     F .text	000000b0 __swbuf_r
000082e4  w    F .text	00000008 HardwareSerial2::setTX(unsigned char, bool)
1fffb0ec g     O .bss	00000004 conttimer1
00008d1c  w    F .text	00000006 dma_ch8_isr
000071fc g     F .text	000000e6 FlexCAN::write(CAN_message_t const&)
00007b98 g     F .text	00000072 ADC_Module::setAveraging(unsigned char)
0000c660 g     F .text	0000000c __malloc_unlock
000084a4  w    F .text	00000020 HardwareSerial3::write(int)
0000711c g     F .text	000000e0 FlexCAN::writeTxRegisters(CAN_message_t const&, unsigned char)
00009558 g     F .text	000000d0 serial2_end
00008880 g     F .text	000000c8 analog_init
00002da8 g     F .text	000000e4 Prechargecon()
0000a4f4 g     F .text	00000088 usb_tx
0000be34 g     F .text	00000136 .hidden __divsf3
1fffb1fc g     O .bss	00000004 outputcheck
00008d1c  w    F .text	00000006 portcd_isr
00007abc g     F .text	00000034 ADC_Module::ADC_Module(unsigned char, unsigned char const*, ADC_Module::ADC_NLIST const*, ADC_settings::ADC_REGS_t&)
00008984 g     F .text	0000006c eeprom_initialize
1fffb2e0 g     O .bss	00000004 x
00008430  w    F .text	00000004 HardwareSerial3::clear()
0000ccd8 g     F .text	000000f8 memmove
1fffb13c g     O .bss	00000004 lasttime
000006b0 g     F .text	00000006 BMSModule::getAvgTemp()
0000d414 g     F .text	0000004c _Balloc
1fffb168 g     O .bss	00000004 menuload
00008d1c  w    F .text	00000006 can1_rx_warn_isr
000145ec g       .fini	00000000 __exidx_end
00000458 g     F .text	00000064 BMSModule::BMSModule()
0000c058 g     F .text	0000004c .hidden __fixsfsi
00008d1c  w    F .text	00000006 dma_error_isr
1fffb4cc g     O .bss	00000001 EventResponder::runningFromYield
00008d1c  w    F .text	00000006 i2c0_isr
1fff8f98 g     O .bss	00000004 whichDisplay
0000b934 g     F .text	0000008a .hidden __gtdf2
1fff8f74 g     O .data	00000004 __atexit_recursive_mutex
00007abc g     F .text	00000034 ADC_Module::ADC_Module(unsigned char, unsigned char const*, ADC_Module::ADC_NLIST const*, ADC_settings::ADC_REGS_t&)
0000cfb0 g     F .text	0000000c __errno
000083f8  w    F .text	00000018 HardwareSerial3::write(char const*)
00008d1c  w    F .text	00000006 portd_isr
00008d1c  w    F .text	00000006 enet_error_isr
1fffb4c8 g     O .bss	00000004 EventResponder::firstInterrupt
00000774 g     F .text	00000068 BMSModuleManager::BMSModuleManager()
1fffb144 g     O .bss	00000004 looptime1
000082fc  w    F .text	00000004 HardwareSerial2::end()
1fffb87c g     O .bss	00000004 __stdio_exit_handler
000082ec  w    F .text	00000006 HardwareSerial2::setRX(unsigned char)
00008d1c  w    F .text	00000006 tpm1_isr
0000ad90  w    F .text	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
1fffb078 g     O .bss	00000004 chargecurrent
00012548 g     F .text	0000002c _fstat_r
00014048 g     O .text	00000110 digital_pin_to_info_PGM
00000570 g     F .text	00000006 BMSModule::getFaults()
1fffb880 g     O .bss	00000004 errno
1fffb204 g     O .bss	000000d0 settings
000145ec g       .fini	00000000 _etext
00007e08 g     F .text	00000010 _spi_dma_rxISR0()
1fff8f78 g       .bss	00000000 _sbss
0000b9d0 g     F .text	00000010 .hidden __aeabi_cdcmple
1fffb080 g     O .bss	00000004 chargerendbulk
0000babc g     F .text	00000160 .hidden __aeabi_fadd
0000bab8 g     F .text	00000164 .hidden __subsf3
00009274 g     F .text	0000001c digitalRead
00008d1c  w    F .text	00000006 porte_isr
1fff872c g     O .data	00000008 bmsmanu
0000615c g     F .text	00000a28 loop
00008d1c  w    F .text	00000006 portb_isr
00006b8c g     F .text	00000078 FlexCAN::FlexCAN(unsigned char)
00008d1c  w    F .text	00000006 spi1_isr
00000744 g     F .text	00000030 BMSModule::setIgnoreCell(float)
00008d1c  w    F .text	00000006 uart3_status_isr
00008d1c  w    F .text	00000006 mcm_isr
00008334  w    F .text	00000020 HardwareSerial2::write(int)
000084a0  w    F .text	00000004 HardwareSerial3::availableForWrite()
1fffb4c4 g     O .bss	00000004 EventResponder::lastInterrupt
00009b54 g     F .text	00000184 uart1_status_isr
00009660 g     F .text	0000007c serial2_set_tx
00008b30 g     F .text	000001a6 memcpy
00008d1c  w    F .text	00000006 randnum_isr
00009b0c g     F .text	00000048 serial2_clear
0000b9c0 g     F .text	00000020 .hidden __aeabi_cdrcmple
1fff8f78 g     O .data	00000000 .hidden __TMC_END__
0000c044 g     F .text	00000012 .hidden __aeabi_fcmpgt
00000c68 g     F .text	00000004 BMSModuleManager::getPackVoltage()
0000db8c g     F .text	00001ba4 _svfprintf_r
0000b860 g     F .text	00000022 .hidden __floatsidf
00000c6c g     F .text	00000004 BMSModuleManager::setPstrings(int)
1fff8764 g     O .data	00000002 pwmfreq
1fffb4d8 g     O .bss	00000004 systick_millis_count
0000b93c g     F .text	00000082 .hidden __ltdf2
00008cd8  w    F .text	00000044 bus_fault_isr
00003d6c g     F .text	00000268 chargercomms()
00008454  w    F .text	00000008 HardwareSerial3::setTX(unsigned char, bool)
00008d1c  w    F .text	00000006 watchdog_isr
00008d88 g     F .text	00000044 nvic_execution_priority
00008d1c  w    F .text	00000006 i2c1_isr
1fffb6d0 g     O .bss	00000001 usb_configuration
1fff8fe0 g     O .bss	00002028 bms
00006b84 g     F .text	00000004 CANListener::frameHandler(CAN_message_t&, int, unsigned char)
00008d1c  w    F .text	00000006 dma_ch11_isr
00008270  w    F .text	0000000c HardwareSerial2::write9bit(unsigned long)
00008394  w    F .text	00000020 HardwareSerial2::write(unsigned int)
0000a3fc  w    F .text	00000002 serialEvent2()
1fff8740 g     O .data	00000004 chargerid2
00008d1c  w    F .text	00000006 i2c2_isr
00008f30 g     F .text	00000224 analogWrite
1fff8880  w    O .data	00000018 usb_string_manufacturer_name
1fffb6d4 g     O .bss	00000008 usb_rx_byte_count_data
00008d1c  w    F .text	00000006 pit1_isr
0000c0e4 g     F .text	00000010 malloc
00008d1c  w    F .text	00000006 dma_ch4_isr
00008d1c  w    F .text	00000006 software_isr
00009628 g     F .text	00000038 serial2_set_transmit_pin
00007ee4 g     F .text	00000068 FilterOnePole::input(float)
00008d6c  w    F .text	0000000a _fstat
00008d1c  w    F .text	00000006 dma_ch7_isr
00007f4c g     F .text	00000078 Serial_CAN::recv(unsigned long*, unsigned char*)
00001e4c g     F .text	00000128 alarmupdate()
00007e50 g     F .text	0000003c FilterOnePole::FilterOnePole(FILTER_TYPE, float, float)
000008ec g     F .text	000002e0 BMSModuleManager::balanceCells()
0000fb38 g     F .text	00000040 __assert_func
00007cb4  w    F .text	00000016 EventResponder::triggerEvent(int, void*)
0000bc24 g     F .text	0000001c .hidden __aeabi_i2f
000143d0 g     O .text	000000c8 __mprec_tens
0000acf0 g     F .text	00000088 usb_init
000006a8 g     F .text	00000006 BMSModule::getHighTemp()
0000bf74 g     F .text	00000066 .hidden __lesf2
00009f50 g     F .text	0000006c serial3_end
0000ba70 g     F .text	00000040 .hidden __fixunsdfsi
00008d1c  w    F .text	00000006 lptmr_isr
00000d8c g     F .text	00000050 BMSModuleManager::getAvgCellVolt()
1fffb740 g     O .bss	00000004 __malloc_top_pad
00008e74 g     F .text	00000014 rtc_set
1fffb2e4 g     O .bss	0000019c Can0
00008464  w    F .text	00000006 HardwareSerial3::transmitterEnable(unsigned char)
1fff8f78 g       .bss	00000000 __bss_start__
00007924 g     F .text	00000090 ADC_Module::setResolution(unsigned char)
0000b840 g     F .text	0000001e .hidden __aeabi_ui2d
00001654 g     F .text	0000023c BMSModuleManager::printAllCSV(unsigned long, float, int)
0000f96c g     F .text	00000008 _localeconv_r
000094bc g     F .text	0000009c serial2_format
00011ddc g     F .text	000002e8 __sfvwrite_r
0000d5b4 g     F .text	0000005c __i2b
00013f5c g     O .text	00000068 vtable for HardwareSerial2
0000a180 g     F .text	0000008c serial3_getchar
1fff8720 g       .data	00000000 _sdata
0000b5bc g     F .text	00000000 .hidden __aeabi_drsub
0000b31c g     F .text	00000010 finitef
0000cf60 g     F .text	00000024 _sbrk_r
00000590 g     F .text	0000000c BMSModule::getCellVoltage(int)
00008444  w    F .text	00000010 HardwareSerial3::attachRts(unsigned char)
000001bc g     F .text	000001c8 ResetHandler
00009d10 g     F .text	00000020 serial2_add_memory_for_write
1fffb2d4 g     O .bss	00000004 storagemode
0000ae30 g     F .text	00000048 usb_serial_getchar
00008d1c  w    F .text	00000006 can1_bus_off_isr
00003574 g     F .text	00000318 currentlimit()
00006e04 g     F .text	00000062 FlexCAN::setMask(unsigned long, unsigned char)
00008d1c  w    F .text	00000006 ftm2_isr
1fffb6ec g     O .bss	00000008 usb_cdc_line_coding
00009228 g     F .text	0000004c digitalWrite
00008d1c  w    F .text	00000006 uart5_status_isr
00008d1c  w    F .text	00000006 lpuart0_status_isr
1fffb4d0 g     O .bss	00000004 EventResponder::lastYield
00013e5c g     O .text	0000002c ADC::channel2sc1aADC0
000006a0 g     F .text	00000006 BMSModule::getLowTemp()
0000cf34 g     F .text	0000002c _read_r
000141d4 g     O .text	00000004 usb_endpoint_config_table
00008d1c  w    F .text	00000006 dma_ch9_isr
1fffb16c g     O .bss	00000010 msg
00008d1c  w    F .text	00000006 pit2_isr
000093e0 g     F .text	000000dc serial2_begin
0000b9f4 g     F .text	00000012 .hidden __aeabi_dcmplt
0000a158 g     F .text	00000028 serial3_available
0000f730 g     F .text	000000c6 _fclose_r
1fffb738 g     O .bss	00000004 __malloc_max_sbrked_mem
000082c0  w    F .text	00000004 HardwareSerial2::clear()
00009290 g     F .text	00000078 pinMode
1fffb138 g     O .bss	00000004 lastUpdate
0000ade0 g     F .text	00000050 usb_free
00008600 g     F .text	000001c0 Print::printFloat(double, unsigned char)
00008d1c  w    F .text	00000006 i2c3_isr
0000b884 g     F .text	00000042 .hidden __extendsfdf2
1fffb17c g     O .bss	00000080 msgString
000127ec g     F .text	000001d0 .hidden __aeabi_ddiv
1fffb148 g     O .bss	00000020 lowpassFilter
1fff8744 g     O .data	00000004 debug
0000b5c8 g     F .text	00000276 .hidden __adddf3
0000bf7c g     F .text	0000005e .hidden __nesf2
000097bc g     F .text	000000f8 serial2_putchar
00000854 g     F .text	00000098 BMSModuleManager::getAllVoltTemp()
00008328  w    F .text	00000004 HardwareSerial2::available()
00009a34 g     F .text	0000008c serial2_getchar
000145ec g       .fini	00000000 __exidx_start
00012598 g     F .text	00000254 .hidden __aeabi_dmul
00008d1c  w    F .text	00000006 pit0_isr
00008410  w    F .text	00000010 HardwareSerial3::write(unsigned char const*, unsigned int)
00008d78  w    F .text	00000004 _isatty
1fffb4c0 g     O .bss	00000004 EventResponder::firstYield
000079b4 g     F .text	00000108 ADC_Module::analog_init()
1fff8720 g     O .data	00000001 Logger::logLevel
1fffb11c g     O .bss	00000010 inMsg
000084c4  w    F .text	00000020 HardwareSerial3::write(unsigned long)
00008d1c  w    F .text	00000006 can1_error_isr
0000c66c g     F .text	000003d8 _realloc_r
0000072c g     F .text	00000006 BMSModule::settempsensor(int)
0000cfbc g     F .text	00000048 __libc_init_array
1fffba24 g       .bss	00000000 __bss_end
000075d8 g     F .text	00000002 can0_wakeup_isr
1fffb07c g     O .bss	00000004 chargerend
00008288  w    F .text	00000018 HardwareSerial2::write(char const*)
00008d1c  w    F .text	00000006 flash_cmd_isr
000082a0  w    F .text	00000010 HardwareSerial2::write(unsigned char const*, unsigned int)
00009e1c g     F .text	00000098 serial3_begin
0001223c g     F .text	00000066 _fputwc_r
000143a8 g     O .text	00000028 __mprec_bigtens
00008d84  w    F .text	00000002 abort
0000ad78  w    F .text	00000004 usb_serial_class::clear()
0000b840 g     F .text	0000001e .hidden __floatunsidf
000004bc g     F .text	0000002c BMSModule::decodeCellVoltage(int, CAN_message_t&, int, int)
0000a27c g     F .text	00000128 uart2_status_isr
00008d34  w    F .text	0000002c _sbrk
0000d91c g     F .text	0000003e __mcmp
1fff87d8 g     O .data	00000004 __brkval
1fffb6f4 g     O .bss	00000001 usb_cdc_line_rtsdtr
0000b0d0 g     F .text	00000048 usb_serial_flush_callback
00003a04 g     F .text	00000368 dashupdate()
1fffb0f0 g     O .bss	00000004 conttimer2
00008300  w    F .text	00000020 HardwareSerial2::begin(unsigned long, unsigned long)
000145c8 g     F .text	00000000 _init
1fff8fd4 g     O .bss	00000004 alarm
0000b32c g     F .text	00000244 __ieee754_expf
1fffb008 g     O .bss	00000001 bmsstatus
0000a0e8 g     F .text	00000028 serial3_write
00008420  w    F .text	00000008 HardwareSerial3::addMemoryForWrite(void*, unsigned int)
00008d1c  w    F .text	00000006 svcall_isr
00008d1c  w    F .text	00000006 dma_ch15_isr
1fffb118 g     O .bss	00000004 id
00000d84 g     F .text	00000004 BMSModuleManager::getHighTemperature()
0000bab8 g     F .text	00000164 .hidden __aeabi_fsub
00001890 g     F .text	0000000c Logger::setLoglevel(Logger::LogLevel)
00008d1c  w    F .text	00000006 uart1_error_isr
0000f974 g     F .text	00000028 __libc_fini_array
00009154 g     F .text	000000d4 analogWriteFrequency
00008d1c  w    F .text	00000006 usbhs_phy_isr
1fffba24 g       .bss	00000000 _ebss
1fff87c0 g     O .data	00000014 Serial3
00006d34 g     F .text	00000084 FlexCAN::setFilter(CAN_filter_t const&, unsigned char)
1fff8750 g     O .data	00000004 firmver
0000846c  w    F .text	00000004 HardwareSerial3::end()
1fffb084 g     O .bss	00000060 console
0000d514 g     F .text	00000040 __hi0bits
000075e8 g     F .text	0000005c ADC::ADC()
0000c030 g     F .text	00000012 .hidden __aeabi_fcmpge
000129bc g     F .text	0000004e .hidden __fixdfsi
000082b8  w    F .text	00000008 HardwareSerial2::addMemoryForRead(void*, unsigned int)
00008d1c g     F .text	00000006 unused_isr
00008434  w    F .text	00000010 HardwareSerial3::attachCts(unsigned char)
00008d1c  w    F .text	00000006 spi0_isr
0000a3a4 g     F .text	00000038 serial3_add_memory_for_read
1fffb888 g     O .bss	00000001 __lock___malloc_recursive_mutex
00008494  w    F .text	00000004 HardwareSerial3::read()
0000bc50 g     F .text	0000007c .hidden __floatdisf
00008d1c  w    F .text	00000006 dma_ch3_isr
1fffb0e4 g     O .bss	00000004 contctrl
1fffb744 g     O .bss	00000138 __sf
0000344c g     F .text	00000128 canread()
0000bf6c g     F .text	0000006e .hidden __gtsf2
00008d1c  w    F .text	00000006 flash_error_isr
0000b5c8 g     F .text	00000276 .hidden __aeabi_dadd
0000b93c g     F .text	00000082 .hidden __ledf2
00000ddc g     F .text	00000878 BMSModuleManager::printPackDetails(int, bool)
0000c01c g     F .text	00000012 .hidden __aeabi_fcmple
00008d1c  w    F .text	00000006 uart5_error_isr
00008d1c  w    F .text	00000006 rtc_seconds_isr
00013eb4 g     O .text	00000078 SPIClass::spi0_hardware
00008d1c  w    F .text	00000006 pdb_isr
0000d76c g     F .text	000000c0 __pow5mult
0000b8c8 g     F .text	0000006a .hidden __aeabi_ul2d
00008cd8  w    F .text	00000044 usage_fault_isr
00008d1c  w    F .text	00000006 dac1_isr
00000000 g     O .text	000001bc _VectorsFlash
00008d1c  w    F .text	00000006 dma_ch14_isr
1fffb140 g     O .bss	00000004 looptime
1fffb134 g     O .bss	00000004 inputcheck
1fffb6f8 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
0000b208 g     F .text	00000050 HardwareSerial::addToSerialEventsList()
00008234 g     F .text	00000010 systick_isr
0000a110 g     F .text	00000018 serial3_flush
00008d1c  w    F .text	00000006 rtc_alarm_isr
0000d010 g     F .text	00000002 __retarget_lock_release_recursive
000082d4  w    F .text	00000010 HardwareSerial2::attachRts(unsigned char)
00008d1c  w    F .text	00000006 dma_ch2_isr
1fff880c g     O .data	00000010 Serial
1fff874c g     O .data	00000004 filterFrequency
00008d1c  w    F .text	00000006 ftm1_isr
0000b5ac g     F .text	00000008 .hidden __math_uflowf
0000ad98  w    F .text	00000006 usb_serial_class::write(unsigned char)
00009fbc g     F .text	00000038 serial3_set_transmit_pin
00008d24  w    F .text	0000000c startup_early_hook
00008d1c  w    F .text	00000006 dma_ch13_isr
0000832c  w    F .text	00000004 HardwareSerial2::flush()
1fff8f9c g     O .bss	00000004 CANmilliamps
00008d1c  w    F .text	00000006 uart2_error_isr
0000ae78 g     F .text	00000030 usb_serial_peekchar
0000ba30 g     F .text	00000012 .hidden __aeabi_dcmpgt
00007ff8 g     F .text	000000a0 Serial_CAN::cmdOk(char*)
1fff8754 g     O .data	00000004 maxac1
0000a3dc g     F .text	00000020 serial3_add_memory_for_write
0000cbac g     F .text	0000000c __sfp_lock_acquire
0000f9a0 g     F .text	00000000 memchr
0000a04c g     F .text	00000002 serial3_set_rx
1fffba24 g       .bss	00000000 __bss_end__
1fff88b0 g     O .data	00000016 usb_string_serial_number_default
00008cd8 g     F .text	00000044 fault_isr
0000d1dc g     F .text	0000020c _free_r
000080ec g     F .text	0000005c Serial_CAN::canRate(unsigned char)
0000ced8 g     F .text	0000000c __locale_mb_cur_max
00010c1c g     F .text	0000001a _wcsrtombs_r
0000ba1c g     F .text	00000012 .hidden __aeabi_dcmpge
00008d1c  w    F .text	00000006 usb_charge_isr
1fffb894 g     O .bss	00000190 __atexit0
0000ad88  w    F .text	00000004 usb_serial_class::flush()
1fff8fbc g     O .bss	00000004 Pretimer1
00008d1c  w    F .text	00000006 cmt_isr
0000b5c4 g     F .text	0000027a .hidden __aeabi_dsub
00008d1c  w    F .text	00000006 usbhs_isr
00007e50 g     F .text	0000003c FilterOnePole::FilterOnePole(FILTER_TYPE, float, float)
1fff8cd0 g     O .data	00000004 __malloc_sbrk_base
0000ad80  w    F .text	00000004 usb_serial_class::read()
00008d1c  w    F .text	00000006 ftm3_isr
1fff8fac g     O .bss	00000004 Discharge
0000388c g     F .text	000000cc inputdebug()
00008d1c  w    F .text	00000006 tsi0_isr
0000b8c8 g     F .text	0000006a .hidden __floatundidf
00008d7c  w    F .text	00000006 _lseek
0000d82c g     F .text	000000f0 __lshift
00008d1c  w    F .text	00000006 spi2_isr
1fff8734 g     O .data	00000008 bmsname
0000bc24 g     F .text	0000001c .hidden __floatsisf
00010c60 g     F .text	00000100 __ssprint_r
0000b258  w    F .text	00000002 serialEvent()
1fffb6d1 g     O .bss	00000001 usb_reboot_timer
0000fab0 g     F .text	00000088 __register_exitproc
00007c0c g     F .text	00000018 ADC_Module::checkPin(unsigned char)
000089f0 g     F .text	00000034 eeprom_read_byte
0000aed4 g     F .text	00000038 usb_serial_flush_input
1fffb10c g     O .bss	00000008 filter
0000d610 g     F .text	0000015c __multiply
0000b014 g     F .text	0000001a usb_serial_putchar
00000021 g       *ABS*	00000000 _teensy_model_identifier
1fff8fd0 g     O .bss	00000004 adc
0000c058 g     F .text	0000004c .hidden __aeabi_f2iz
0000ce74 g     F .text	00000064 strncpy
1fffb710 g     O .bss	00000028 __malloc_current_mallinfo
1fff8fc0 g     O .bss	00000004 RawCur
0000bf7c g     F .text	0000005e .hidden __eqsf2
0000dab0 g     F .text	000000c0 __d2b
1fffb700 g     O .bss	0000000c HardwareSerial::s_serials_with_serial_events
000075c0 g     F .text	00000002 can0_bus_off_isr
000098b4 g     F .text	00000110 serial2_write
00000578 g     F .text	00000006 BMSModule::getAlerts()
0000827c  w    F .text	0000000c HardwareSerial2::write(unsigned char)
00008354  w    F .text	00000020 HardwareSerial2::write(unsigned long)
000099dc g     F .text	00000030 serial2_write_buffer_free
1fffb6dc g     O .bss	00000001 usb_rx_memory_needed
0000a57c g     F .text	00000774 usb_isr
1fff8fb8 g     O .bss	00000004 Pretimer
0000be34 g     F .text	00000136 .hidden __aeabi_fdiv
0000cee4 g     F .text	00000024 _close_r
0000b860 g     F .text	00000022 .hidden __aeabi_i2d
00008878 g     F .text	00000006 Stream::parseInt()
00002e8c g     F .text	00000208 contcon()
1fffb488 g     O .bss	00000038 SPI
00006b8c g     F .text	00000078 FlexCAN::FlexCAN(unsigned char)
1fff880a g     O .data	00000001 _serialEvent3_default
00014158  w    O .text	00000028 vtable for usb_serial_class
00008d1c  w    F .text	00000006 uart3_error_isr
00003214 g     F .text	000001b8 VEcan()
0000d008 g     F .text	00000002 __retarget_lock_close_recursive
00013e58 g     O .text	00000004 ADC::diff_table_ADC1
0000bc40 g     F .text	0000008c .hidden __floatundisf
000087c0 g     F .text	00000040 Stream::timedPeek()
00000580 g     F .text	00000006 BMSModule::getCOVCells()
000120c4 g     F .text	000000cc __swsetup_r
00008d1c  w    F .text	00000006 porta_isr
1fffb130 g     O .bss	00000004 incomingByte
000127ec g     F .text	000001d0 .hidden __divdf3
1fff83bc g     O .usbbuffers	00000360 usb_buffer_memory
00008d1c  w    F .text	00000006 low_voltage_isr
1fffb00c g     O .bss	00000064 can
1fff88c8 g     O .data	00000408 __malloc_av_
0000bc1c g     F .text	00000024 .hidden __aeabi_ui2f
1fffb890 g     O .bss	00000004 __atexit
000075c4 g     F .text	0000000c can0_error_isr
00008e8c g     F .text	000000a4 _init_Teensyduino_internal_
00012598 g     F .text	00000254 .hidden __muldf3
0000cc4c g     F .text	00000022 __sread
0000a258 g     F .text	00000024 serial3_clear
00002b18 g     F .text	00000290 updateSOC()
0000b078 g     F .text	00000058 usb_serial_flush_output
00008d1c  w    F .text	00000006 dma_ch12_isr
0000c654 g     F .text	0000000c __malloc_lock
00008d1c  w    F .text	00000006 can1_wakeup_isr
00000d88 g     F .text	00000004 BMSModuleManager::getLowTemperature()
1fff8200 g     O .dmabuffers	000001bc _VectorsRam
0000f918 g     F .text	00000054 _fflush_r
0000fb78 g     F .text	00000078 _calloc_r
00008244 g     F .text	0000002c HardwareSerial2::begin(unsigned long)
00008d1c  w    F .text	00000006 pit3_isr
00004540 g     F .text	00000088 SetSerialBaud(unsigned long)
0000bf7c g     F .text	0000005e .hidden __cmpsf2
1fff8820 g     O .data	00000001 yield_active_check_flags
00008d1c  w    F .text	00000006 enet_rx_isr
0000d00c g     F .text	00000002 __retarget_lock_acquire_recursive
00008d1c  w    F .text	00000006 portc_isr
0000cdd0 g     F .text	000000a4 memset
00008b20 g     F .text	00000010 main
1fffb73c g     O .bss	00000004 __malloc_max_total_mem
0000d004 g     F .text	00000002 __retarget_lock_init_recursive
00009ac0 g     F .text	0000004c serial2_peek
0000bc50 g     F .text	0000007c .hidden __aeabi_l2f
00009738 g     F .text	00000044 serial2_set_rts
00006c04 g     F .text	000000c8 FlexCAN::setBaudRate(unsigned long)
0000bf74 g     F .text	00000066 .hidden __ltsf2
00008cd8  w    F .text	00000044 memmanage_fault_isr
0000a094 g     F .text	00000040 serial3_set_cts
0000ccd0 g     F .text	00000008 __sclose
0000b25c g     F .text	00000070 usb_init_serialnumber
000145e8 g       .text	00000000 __init_array_end
00007084 g     F .text	00000096 FlexCAN::read(CAN_message_t&)
0000fd18 g     F .text	00000eb8 _dtoa_r
0000c0f4 g     F .text	00000560 _malloc_r
1fffb70c g     O .bss	00000001 HardwareSerial::s_count_serials_with_serial_events
00008d1c  w    F .text	00000006 debugmonitor_isr
0000db70 g     F .text	0000001a __ascii_wctomb
0000b8d8 g     F .text	0000005a .hidden __aeabi_l2d
1fffb104 g     O .bss	00000008 dta
0000977c g     F .text	00000040 serial2_set_cts
00008168 g     F .text	00000084 EventResponder::triggerEventNotImmediate()
000083e0  w    F .text	0000000c HardwareSerial3::write9bit(unsigned long)
65353080 g       *ABS*	00000000 __rtc_localtime
00009308 g     F .text	00000040 micros
1fff8fb4 g     O .bss	00000004 OverTime
1fff8fb0 g     O .bss	00000004 ErrorReason
0000bc40 g     F .text	0000008c .hidden __aeabi_ul2f
00008d1c  w    F .text	00000006 cmp1_isr
00008d1c  w    F .text	00000006 ftm0_isr
000082c4  w    F .text	00000010 HardwareSerial2::attachCts(unsigned char)
0000bfe4 g     F .text	00000010 .hidden __aeabi_cfcmple
1fffb0f4 g     O .bss	00000004 conttimer3
0000d13c g     F .text	000000a0 _malloc_trim_r
000122a4 g     F .text	000000f8 _wcsnrtombs_l
1fff887c g     O .data	00000004 string0
0000af0c g     F .text	00000108 usb_serial_write
0000bccc g     F .text	00000168 .hidden __mulsf3
00008d30  w    F .text	00000002 startup_late_hook
00008490  w    F .text	00000004 HardwareSerial3::peek()
00007e8c g     F .text	00000058 FilterOnePole::output()
0000ad84  w    F .text	00000004 usb_serial_class::available()
00008504  w    F .text	00000020 HardwareSerial3::write(unsigned int)
00013f5a  w    O .text	00000001 _serialEvent_default
00000698 g     F .text	00000006 BMSModule::getscells()
0000a128 g     F .text	00000030 serial3_write_buffer_free
00008470  w    F .text	00000020 HardwareSerial3::begin(unsigned long, unsigned long)
000084e4  w    F .text	00000020 HardwareSerial3::write(long)
1fff8898  w    O .data	00000016 usb_string_product_name
00009348 g     F .text	00000098 delay
0000b944 g     F .text	0000007a .hidden __nedf2
00008d1c  w    F .text	00000006 tpm0_isr
00007c60 g     F .text	00000054 ADC_Module::startContinuous(unsigned char)
000145e8 g     F .fini	00000000 _fini
1fff8fa0 g     O .bss	00000004 CSVdebug
000033cc g     F .text	00000080 CAB300()
00013e54 g     O .text	00000004 ADC::diff_table_ADC0
00000bcc g     F .text	00000050 BMSModuleManager::getLowCellVolt()
0000cc0c g     F .text	00000040 sprintf
00008d1c  w    F .text	00000006 i2s0_rx_isr
00008d1c  w    F .text	00000006 uart4_error_isr
000085a8 g     F .text	00000010 Print::print(long)
0000d130 g     F .text	0000000c atexit
000075e8 g     F .text	0000005c ADC::ADC()
0000bf6c g     F .text	0000006e .hidden __gesf2
0001239c g     F .text	00000024 _wcsnrtombs_r
0000cf84 g     F .text	0000002c _write_r
0000bab0 g     F .text	0000016c .hidden __aeabi_frsub
00000ccc g     F .text	000000b8 BMSModuleManager::getAvgTemperature()
1fffb100 g     O .bss	00000004 discurrent
000075b4 g     F .text	0000000c can0_message_isr
1fff8f70 g     O .data	00000004 _impure_ptr
00008d1c  w    F .text	00000006 can1_message_isr
0000bff4 g     F .text	00000012 .hidden __aeabi_fcmpeq
0000f7f8 g     F .text	0000011e __sflush_r
00008d1c  w    F .text	00000006 nmi_isr
000006b8 g     F .text	00000050 BMSModule::getModuleVoltage()
00008320  w    F .text	00000004 HardwareSerial2::peek()
0000bccc g     F .text	00000168 .hidden __aeabi_fmul
00000718 g     F .text	0000000a BMSModule::setAddress(int)
0000cbc4 g     F .text	00000046 _fwalk_sglue
000145d4 g       .text	00000000 __preinit_array_end
00007838 g     F .text	000000ec ADC_Module::wait_for_cal()
0000bfdc g     F .text	00000018 .hidden __aeabi_cfrcmple
000082b0  w    F .text	00000008 HardwareSerial2::addMemoryForWrite(void*, unsigned int)
00008d1c  w    F .text	00000006 sdhc_isr
00013fc4 g     O .text	00000068 vtable for HardwareSerial3
0000849c  w    F .text	00000004 HardwareSerial3::flush()
000005d8 g     F .text	0000004c BMSModule::getHighCellV()
00000724 g     F .text	00000006 BMSModule::isExisting()
00000624 g     F .text	00000074 BMSModule::getAverageV()
0000d3e8 g     F .text	0000002a __ascii_mbtowc
00007af0 g     F .text	000000a8 ADC_Module::setSamplingSpeed(ADC_settings::ADC_SAMPLING_SPEED)
00004110 g     F .text	00000430 setup
00014180 g     O .text	00000054 usb_descriptor_list
0000a404 g     F .text	00000044 usb_rx
0000059c g     F .text	0000003c BMSModule::getLowCellV()
00007c24 g     F .text	0000003c ADC_Module::startReadFast(unsigned char)
00008d1c  w    F .text	00000006 dma_ch10_isr
1fffb0fc g     O .bss	00000004 debugCur
0000ba70 g     F .text	00000040 .hidden __aeabi_d2uiz
00008d1c  w    F .text	00000006 uart0_error_isr
1fff8768 g     O .data	00000004 sensor
00007380 g     F .text	00000234 FlexCAN::message_isr()
1fff8fcc g     O .bss	00000004 UnderTime
0000ada0 g     F .text	00000040 usb_malloc
00000458 g     F .text	00000064 BMSModule::BMSModule()
0000c008 g     F .text	00000012 .hidden __aeabi_fcmplt
00008d1c  w    F .text	00000006 i2s0_isr
1fffb2dc g     O .bss	00000004 warning
20008000 g       .bss	00000000 _estack
0000b030 g     F .text	00000048 usb_serial_write_buffer_free
00000c70 g     F .text	0000005c BMSModuleManager::setSensors(int, float)
00008d1c  w    F .text	00000006 enet_timer_isr
00007644 g     F .text	000000aa ADC::startContinuous(unsigned char, signed char)
0000b9e0 g     F .text	00000012 .hidden __aeabi_dcmpeq
1fff8cd8 g     O .data	0000000c __sglue
000085d4  w    F .text	00000014 _write
1fff8f78 g       .data	00000000 _edata
1fffb074 g     O .bss	00000004 cellspresent
0000081c g     F .text	00000036 BMSModuleManager::decodecan(CAN_message_t&)
00008d1c  w    F .text	00000006 i2s0_tx_isr
00008d1c  w    F .text	00000006 adc1_isr
00006e68 g     F .text	000001b8 FlexCAN::begin(unsigned long, CAN_filter_t const&, unsigned char, unsigned char)
00012190 g     F .text	000000ac __fputwc
0000ad8c  w    F .text	00000004 usb_serial_class::availableForWrite()
1fff8f94 g     O .bss	00000001 printPrettyDisplay
00008d1c  w    F .text	00000006 cmp0_isr
00013e88 g     O .text	0000002c ADC::channel2sc1aADC1
00004050 g     F .text	00000078 SetSerialCan(int)
00006ccc g     F .text	00000066 FlexCAN::setNumTxBoxes(unsigned char)
00008dd4 g     F .text	0000005c ultoa
0000c0a4 g     F .text	0000003e .hidden __aeabi_f2uiz
0000073c g     F .text	00000006 BMSModule::setReset(bool)
00007fc4 g     F .text	00000034 Serial_CAN::clear()
00003fd4 g     F .text	0000007c SerialCanRecieve()
1fff8758 g     O .data	00000004 maxac2
000096dc g     F .text	0000005c serial2_set_rx
0000cc70 g     F .text	0000003e __swrite
00008dcc g     F .text	00000004 operator new(unsigned int)
000081ec g     F .text	00000044 EventResponder::runFromInterrupt()
1fff8cd4 g     O .data	00000004 __malloc_trim_threshold
0000ad7c  w    F .text	00000004 usb_serial_class::peek()
00000708 g     F .text	0000000e BMSModule::getTemperature(int)
1fff875c g     O .data	00000004 ncharger
00010c38 g     F .text	00000028 fiprintf
00010dd8 g     F .text	00000f84 _vfiprintf_r
0000bc1c g     F .text	00000024 .hidden __floatunsisf
0000d95c g     F .text	00000154 __mdiff
00000568 g     F .text	00000006 BMSModule::getCellsUsed()
000129bc g     F .text	0000004e .hidden __aeabi_d2iz
00001c4c g     F .text	0000002c SerialConsole::SerialConsole()
00008324  w    F .text	00000004 HardwareSerial2::read()
1fffb6fc g     O .bss	00000001 usb_cdc_transmit_flush_timer
1fff8e50 g     O .data	00000120 _impure_data
0000bfe4 g     F .text	00000010 .hidden __aeabi_cfcmpeq
0000a050 g     F .text	00000044 serial3_set_rts
00001f74 g     F .text	00000230 gaugeupdate()
00008d1c  w    F .text	00000006 pit_isr
0000cbb8 g     F .text	0000000c __sfp_lock_release
1fffb114 g     O .bss	00000004 gaugedebug
1fff8809 g     O .data	00000001 _serialEvent2_default
00008948 g     F .text	0000003c analogWriteDAC0
00006b88 g     F .text	00000002 CANListener::txHandler(int, unsigned char)
000141f0 g     O .text	00000101 _ctype_
00008d1c  w    F .text	00000006 dac0_isr
000099c4 g     F .text	00000018 serial2_flush
1fffb070 g     O .bss	00000004 candebug
00008d60  w    F .text	00000004 _read
000145d4 g       .text	00000000 __init_array_start
00008d1c  w    F .text	00000006 can1_tx_warn_isr
1fffb480 g     O .bss	00000008 FlexCAN::defaultMask
0000ba44 g     F .text	0000002c .hidden __unorddf2
00000734 g     F .text	00000006 BMSModule::setExists(bool)
00008098 g     F .text	00000054 Serial_CAN::baudRate(unsigned char)
0000c0a4 g     F .text	0000003e .hidden __fixunssfsi
1fff876c g     O .data	0000003f bitTimingTable
1fff8fc8 g     O .bss	00000004 SOCtest
000082f4  w    F .text	00000006 HardwareSerial2::transmitterEnable(unsigned char)
00008d1c  w    F .text	00000006 uart0_status_isr
00008d1c  w    F .text	00000006 mcg_isr
0000b2cc g     F .text	00000050 expf
0000a20c g     F .text	0000004c serial3_peek
000076f4 g     F .text	00000142 ADC_Module::setConversionSpeed(ADC_settings::ADC_CONVERSION_SPEED)
1fff8760 g     O .data	00000004 pulltime
00008800 g     F .text	00000076 Stream::parseInt(char)
00009cd8 g     F .text	00000038 serial2_add_memory_for_read
00002520 g     F .text	000005f8 getcurrent()
00000400 g     O .text	00000010 flashconfigbytes
000123c0 g     F .text	000000d8 __smakebuf_r
0000b5b4 g     F .text	00000008 .hidden __math_oflowf
00006db8 g     F .text	0000004a FlexCAN::getFilter(CAN_filter_t&, unsigned char)
0000d040 g     F .text	000000dc strlen
0000b9d0 g     F .text	00000010 .hidden __aeabi_cdcmpeq
0000b934 g     F .text	0000008a .hidden __gedf2
1fff8898 g     O .data	00000016 usb_string_product_name_default
1fff8fd8 g     O .bss	00000004 ampsecond
1fffb0e8 g     O .bss	00000004 contstat
1fff8748 g     O .data	00000004 debugdigits
00008d1c  w    F .text	00000006 dma_ch1_isr
1fff8fc4 g     O .bss	00000004 SOCset
00008148 g     F .text	00000020 Serial_CAN::exitSettingMode()
00000774 g     F .text	00000068 BMSModuleManager::BMSModuleManager()
0000a448 g     F .text	0000002c usb_tx_packet_count
00008374  w    F .text	00000020 HardwareSerial2::write(long)
00007020 g     F .text	00000064 FlexCAN::available()
1fffb12c g     O .bss	00000004 inbox
00008e88  w    F .text	00000002 startup_middle_hook
0000b884 g     F .text	00000042 .hidden __aeabi_f2d
00008d1c  w    F .text	00000006 dma_ch5_isr
1fff873c g     O .data	00000004 chargerid1
000075d4 g     F .text	00000002 can0_rx_warn_isr
00008a24 g     F .text	000000fc eeprom_write_block
00008498  w    F .text	00000004 HardwareSerial3::available()
1fff8fa4 g     O .bss	00000004 CanDebugSerial
000075d0 g     F .text	00000002 can0_tx_warn_isr
00008d1c  w    F .text	00000006 uart4_status_isr
1fff8fdc g     O .bss	00000004 balancecells
0000b5c4 g     F .text	0000027a .hidden __subdf3
000145d4 g       .text	00000000 __preinit_array_start
00001c4c g     F .text	0000002c SerialConsole::SerialConsole()
000072e4 g     F .text	0000009a FlexCAN::readRxRegisters(CAN_message_t&, unsigned char)
0000d554 g     F .text	0000005e __lo0bits
00008428  w    F .text	00000008 HardwareSerial3::addMemoryForRead(void*, unsigned int)
000021a4 g     F .text	0000037c printbmsstat()
00000c1c g     F .text	0000004a BMSModuleManager::getHighCellVolt()
1fffb200 g     O .bss	00000004 outputstate
00009ff4 g     F .text	00000058 serial3_set_tx
0000a400  w    F .text	00000002 serialEvent3()
1fffb0f8 g     O .bss	00000004 currentact
0000fa40 g     F .text	00000070 frexp
00008d1c  w    F .text	00000006 cmp2_isr
0000babc g     F .text	00000160 .hidden __addsf3
00008230 g     F .text	00000004 pendablesrvreq_isr
00008330  w    F .text	00000004 HardwareSerial2::availableForWrite()
1fff8ce4 g     O .data	0000016c __global_locale
00008d1c  w    F .text	00000006 wakeup_isr
0000845c  w    F .text	00000006 HardwareSerial3::setRX(unsigned char)
1fffb88c g     O .bss	00000001 __lock___sfp_recursive_mutex
00008d1c  w    F .text	00000006 cmp3_isr
000085e8 g     F .text	00000014 Print::printNumber(unsigned long, unsigned char, unsigned char)
00009eb4 g     F .text	0000009c serial3_format
1fff8728 g     O .data	00000002 SOH
00008d64  w    F .text	00000006 _close
1fff8724 g     O .data	00000004 SOC
000004e8 g     F .text	00000080 BMSModule::decodecan(int, CAN_message_t&)
00008d1c  w    F .text	00000006 tpm2_isr
0000d474 g     F .text	000000a0 __multadd
1fffb2d8 g     O .bss	00000004 value
0000d460 g     F .text	00000012 _Bfree
1fff87ac g     O .data	00000014 Serial2
00001c2c g     F .text	0000001e Logger::console(bool, char*, ...)
00008d1c  w    F .text	00000006 dma_ch0_isr
1fff88b0  w    O .data	00000016 usb_string_serial_number
1fff8f90 g     O .bss	00000004 prettyCounter
00008d1c  w    F .text	00000006 enet_tx_isr


